{% from 'components/core/show-header' import show_header %}
{% import 'components/core/forms' as forms %}

{% include 'components/core/create-question-name-form' %}

{% if isEdit %}
    {% set values = {} %}
    {% for choice in question_type_data %}
        {% set values = values | merge([choice.item]) %}
    {% endfor %}
{% endif %}

<div class="flex flex-col p-4 flex-1">
    {{ show_header('Rank/Order/Process') }}
    <div class="flex gap-x-32 justify-between w-full">
        <div class="flex flex-1 flex-col w-full">
            <div class="sortable flex flex-col bg-gray-50 p-4 rounded-lg">
                {% for i in range(1, isEdit ? values|length : itemCount) %}
                    <div class="flex gap-x-4">
                    {{ forms.form_field(
                        label:forms.label(
                            id: 'items[]', 
                            content:'â˜°', 
                            attributes:{
                                'class':'handle cursor-grab active:cursor-grabbing whitespace-nowrap text-xl font-bold text-blue-900'}
                            ),
                        input:forms.text(
                            name:'items[]',
                            value: isEdit ? values[i - 1] :  old('items')[i - 1],
                            attributes:{
                                'class':'flex-1 block w-full rounded-md bg-white px-3 py-1.5 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 placeholder:text-gray-400 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6',
                                'required':true
                            }),
                        errors:errors.get('items.' ~ (i-1)),
                        isReverse:true
                    )}}
                    <button type="button" ondblclick="this.parentElement.remove()" class="flex text-xl font-bold text-red-700 hover:text-red-500 transition-colors cursor-pointer items-center mt-2">X</button>
                </div>
                {% endfor %}
                <span id="swap"></span>
              </div>
              <div class="flex gap-x-4 justify-center">
                <span class="text-xs font-semibold text-gray-600 self-center py-1 italic">Items are draggable.</span>
                <span class="text-xs font-semibold text-red-600 self-center py-1 italic">Item deletion is done by double-clicking.</span>
              </div>
        </div>
        <div class="flex flex-col gap-y-4">
            <input type="hidden" id="solution" name="solution" value="creating ranking">
            <div class="flex gap-x-2">
                <img id="loader" class="htmx-indicator mx-auto transition-opacity duration-500 pointer-events-none" width="20" src="{{ asset('images/bars-scale.svg') }}"/>
                <button 
                    type="button" 
                    class="cursor-pointer bg-white border-1 border-gray-600 text-gray-900 hover:bg-gray-600 hover:text-white duration-300 rounded-lg px-2 py-2 font-semibold text-sm"
                    hx-get="/questions/create/add-item?item_count={{ isEdit ? values|length : item_count }}&is_matching=false"
                    hx-target="#swap"
                    hx-swap="beforebegin transition:true"
                    hx-trigger="click throttle:1s"
                    hx-indicator="#loader"
                    >
                    Add more Items
                </button>
            </div>
            


        </div>
    </div>
</div>  

<script>
    htmx.onLoad(function(content) {
        var sortables = content.querySelectorAll(".sortable");
        for (var i = 0; i < sortables.length; i++) {
        var sortable = sortables[i];
        var sortableInstance = new Sortable(sortable, {
            animation: 150,
            ghostClass: 'blue-background-class',
            handle: '.handle',
            swap: true,
            swapClass: 'swap-highlight'
        });

        // Re-enable sorting on the `htmx:afterSwap` event
        sortable.addEventListener("htmx:afterSwap", function() {
            sortableInstance.option("disabled", false);
        });
        }
    })
</script>