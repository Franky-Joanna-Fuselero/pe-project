    <div id="homepage-exam-report" 
         class="flex flex-col max-w-full mx-4 p-4 gap-4">
         <div class="flex justify-between">
            <div class="flex flex-col gap-y-5">
                <div class="flex p-4 bg-white rounded-2xl shadow-lg justify-center">
                    <span class="text-8xl font-bold text-gray-900">
                        Exams
                    </span>
                </div>
                <div class="flex gap-x-4">
                    <div class="flex flex-col h-fit w-32 p-2 gap-y-2 bg-white rounded-2xl shadow-lg">
                    <span class="text-5xl font-bold text-blue-900 self-center">
                        {{ exam }}
                    </span>
                    <span class="text-xs text-blue-400 font-mono font-semibold self-end mt-auto">Count</span>
                    </div>
                    <div class="flex flex-col h-fit w-32 p-2 gap-y-2 bg-white rounded-2xl shadow-lg">
                        <span class="text-5xl font-bold text-green-900 self-center">
                            {{ exam }}
                        </span>
                        <span class="text-xs text-green-400 font-mono font-semibold self-end mt-auto">Published</span>
                    </div>
                    <div class="flex flex-col h-fit w-32 p-2 gap-y-2 bg-white rounded-2xl shadow-lg">
                        <span class="text-5xl font-bold text-orange-900 self-center">
                            {{ exam }}
                        </span>
                        <span class="text-xs text-orange-400 font-mono font-semibold self-end mt-auto">Unpublished</span>
                    </div>
                </div>
            </div>
            
            <div class="flex flex-col w-64 max-w-full p-4 bg-white rounded-2xl shadow-lg gap-y-2">
                    <span class="text-lg font-bold text-gray-800">January</span>
                    <div id="calendar" class="grid grid-cols-7 gap-1 w-full"></div>
                    <span class="text-xs font-semibold text-gray-400 self-end">Examination Dates</span>
            </div>
        </div>
         

        <div class="w-full p-4 bg-white rounded-2xl  shadow-lg">
            <div id="exam-graph" class="w-full"></div>
        </div>


    </div>

<script>
    let count = 3;
    const question_values = [];
    const courses_values = [];
    const values = [];

    for (let i = 0; i < count; i++) {
        values.push(1 + Math.random() * 20);
        question_values.push(1 + Math.random() * 20);
        courses_values.push(1 + Math.random() * 20);

    }   
    let questions = {
        name:'Exams by Questions',
        x: ['Exam A', 'Exam B', 'Exam C'],
        y: question_values,
        hovertemplate:  '<b>No. of Questions</b>: %{y}' +
                        '<br><b>Exam</b> : %{x}<br><extra></extra>',
        type: 'bar',
        orientation: 'v',
        opacity:0.7
    };
    let courses = {
        name:'Exams by Courses',
        x: ['Course A', 'Course B', 'Course C'],
        y: courses_values,
        hovertemplate:  '<b>No. of Exams</b>: %{y}' +
                        '<br><b>Course</b> : %{x}<br><extra></extra>',
        type: 'bar',
        orientation: 'v',
        opacity:0.7
    };
    var data = [questions,courses];
    
    var layout = {
        showlegend: true, 
        title: {
            text: "Exam Composition Report",
            font: {
                size: 32,
                color: '#101828'
            }
        },            
        height: 400,
        autosize: true,
        margin: { l: 40, r:10, t: 60, b: 40 },
        bargap: 0.15,
        barcornerradius: 6,
         xaxis: {
            tickfont: {
                size: 14,
                color: 'rgb(107, 107, 107)'
            }},
        yaxis: {
            tickfont: {
                size: 14,
                color: 'rgb(107, 107, 107)'
                }
        },
        legend: {
            x: 1.0,
            y: 1.0,
            xanchor: 'right',
            bgcolor: 'rgba(255, 255, 255, 0)',
            bordercolor: 'rgba(255, 255, 255, 0)'
        },
    };

    Plotly.newPlot('exam-graph', data, layout, { responsive: true })
        .then(() => {
            Plotly.Plots.resize('exam-graph');  // ✅ force remeasure
        });

    window.addEventListener("resize", () => {
    Plotly.Plots.resize("exam-graph");   // ✅ keep it fluid on window resize
    });

    let exams = [
    { date: "2025-01-06", count: 2 },
    { date: "2025-01-10", count: 1 },
    { date: "2025-01-12", count: 5 }
  ];

  let year = 2025, month = 0; // January
  let firstDay = new Date(year, month, 1).getDay(); // 0=Sun, ... 6=Sat
  let daysInMonth = new Date(year, month + 1, 0).getDate();

  // Map exams to dates
  let examMap = Object.fromEntries(exams.map(e => [e.date, e.count]));

  let calendar = document.getElementById("calendar");

  // Utility for heatmap colors
  function bgClass(count) {
    if (count === 0) return "bg-gray-100";
    if (count === 1) return "bg-blue-200";
    if (count === 2) return "bg-blue-400 text-white";
    return "bg-blue-600 text-white"; // 3 or more
  }

  // Empty cells before the first day
  for (let i = 0; i < firstDay; i++) {
    let empty_cell = document.createElement("empty_cell");
    empty_cell.className = "aspect-square";
    calendar.appendChild(empty_cell);
  }

  // Calendar days
  for (let day = 1; day <= daysInMonth; day++) {
    let date = new Date(year, month, day).toISOString().slice(0, 10);
    let count = examMap[date] ?? 0;

    let caledar_day_cell = document.createElement("caledar_day_cell");
    caledar_day_cell.className = `aspect-square flex flex-col items-center justify-center rounded ${bgClass(count)} cursor-pointer hover:ring-2 hover:ring-blue-500 transition`;
    caledar_day_cell.title = `${day} Jan: ${count} exam(s)`;

    caledar_day_cell.innerHTML = `
      <span class="text-sm font-medium">${day}</span>
    `;

    calendar.appendChild(caledar_day_cell);
  }
</script>